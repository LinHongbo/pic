<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="937px" preserveAspectRatio="none" style="width:585px;height:937px;" version="1.1" viewBox="0 0 585 937" width="585px" zoomAndPan="magnify"><defs><filter height="300%" id="fmzthbzhbajjm" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="232" x="180" y="16.708">"ThreadPoolExecutor类图"</text><!--class Executor--><rect fill="#FEFECE" filter="url(#fmzthbzhbajjm)" height="60.8047" id="Executor" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="181" y="28.9531"/><ellipse cx="257.75" cy="44.9531" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M258.7031,41.7344 L258.7031,48.25 L260.4219,48.25 C260.875,48.25 261.0156,48.2813 261.1875,48.4063 C261.4219,48.5781 261.5313,48.8281 261.5313,49.1094 C261.5313,49.6719 261.1719,49.9531 260.4219,49.9531 L255.2813,49.9531 C254.875,49.9531 254.6719,49.9063 254.5156,49.7813 C254.2969,49.625 254.1563,49.3594 254.1563,49.1094 C254.1563,48.8125 254.3125,48.5313 254.5625,48.375 C254.7188,48.2656 254.8438,48.25 255.2813,48.25 L257,48.25 L257,41.7344 L255.2813,41.7344 C254.8594,41.7344 254.6719,41.7031 254.5156,41.5938 C254.2969,41.4219 254.1563,41.1719 254.1563,40.8906 C254.1563,40.6094 254.3125,40.3125 254.5625,40.1563 C254.7188,40.0625 254.8438,40.0469 255.2813,40.0469 L260.4219,40.0469 C260.875,40.0469 261.0156,40.0781 261.1875,40.1875 C261.4219,40.3594 261.5313,40.625 261.5313,40.8906 C261.5313,41.1875 261.3906,41.4688 261.125,41.625 C261,41.7031 260.8125,41.7344 260.4219,41.7344 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="56" x="278.25" y="49.1074">Executor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="182" x2="398" y1="60.9531" y2="60.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="182" x2="398" y1="68.9531" y2="68.9531"/><ellipse cx="192" cy="80.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="201" y="83.1636">execute(Runable command) : void</text><!--class ExecutorService--><rect fill="#FEFECE" filter="url(#fmzthbzhbajjm)" height="201.6563" id="ExecutorService" style="stroke: #A80036; stroke-width: 1.5;" width="568" x="6" y="149.9531"/><ellipse cx="235.25" cy="165.9531" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M236.2031,162.7344 L236.2031,169.25 L237.9219,169.25 C238.375,169.25 238.5156,169.2813 238.6875,169.4063 C238.9219,169.5781 239.0313,169.8281 239.0313,170.1094 C239.0313,170.6719 238.6719,170.9531 237.9219,170.9531 L232.7813,170.9531 C232.375,170.9531 232.1719,170.9063 232.0156,170.7813 C231.7969,170.625 231.6563,170.3594 231.6563,170.1094 C231.6563,169.8125 231.8125,169.5313 232.0625,169.375 C232.2188,169.2656 232.3438,169.25 232.7813,169.25 L234.5,169.25 L234.5,162.7344 L232.7813,162.7344 C232.3594,162.7344 232.1719,162.7031 232.0156,162.5938 C231.7969,162.4219 231.6563,162.1719 231.6563,161.8906 C231.6563,161.6094 231.8125,161.3125 232.0625,161.1563 C232.2188,161.0625 232.3438,161.0469 232.7813,161.0469 L237.9219,161.0469 C238.375,161.0469 238.5156,161.0781 238.6875,161.1875 C238.9219,161.3594 239.0313,161.625 239.0313,161.8906 C239.0313,162.1875 238.8906,162.4688 238.625,162.625 C238.5,162.7031 238.3125,162.7344 237.9219,162.7344 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="101" x="255.75" y="170.1074">ExecutorService</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="573" y1="181.9531" y2="181.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="573" y1="189.9531" y2="189.9531"/><ellipse cx="17" cy="201.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="26" y="204.1636">shutdown() : void</text><ellipse cx="17" cy="214.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="26" y="216.9683">shutdownNow() : List&lt;Runnable&gt;</text><ellipse cx="17" cy="227.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="26" y="229.7729">isShutdown() : boolean</text><ellipse cx="17" cy="240.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="26" y="242.5776">isTerminated() : boolean</text><ellipse cx="17" cy="253.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="26" y="255.3823">awaitTermination(long timeout, TimeUnit unit) : boolean</text><ellipse cx="17" cy="265.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="26" y="268.187">submit(Callable&lt;T&gt; task) : Future&lt;T&gt;</text><ellipse cx="17" cy="278.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="26" y="280.9917">submit(Runnable task, T result) : Future&lt;T&gt;</text><ellipse cx="17" cy="291.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="26" y="293.7964">submit(Runnable task) : Future&lt;?&gt;</text><ellipse cx="17" cy="304.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="26" y="306.6011">invokeAll(Collection&lt;? extends Callable&lt;T&gt; tasks&gt;) : List&lt;Future&lt;T&gt;&gt;</text><ellipse cx="17" cy="317.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="542" x="26" y="319.4058">invokeAll(Collection&lt;? extends Callable&gt; tasks, long timeout, TimeUnit unit) : List&lt;Future&lt;T&gt;&gt;</text><ellipse cx="17" cy="329.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="26" y="332.2104">invokeAny(Collection&lt;? extends Callable&lt;T&gt;&gt; tasks) : T</text><ellipse cx="17" cy="342.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="482" x="26" y="345.0151">invokeAny(Collection&lt;? extends Callable&lt;T&gt;&gt; tasks, long timeout, TimeUnit unit) : T</text><!--class AbstractExecutorService--><rect fill="#FEFECE" filter="url(#fmzthbzhbajjm)" height="73.6094" id="AbstractExecutorService" style="stroke: #A80036; stroke-width: 1.5;" width="382" x="99" y="411.9531"/><ellipse cx="209.25" cy="427.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M210.8281,429.7656 L206.7813,429.7656 L206.3906,430.75 L206.7813,430.75 C207.2344,430.75 207.375,430.7813 207.5469,430.9063 C207.7656,431.0781 207.8906,431.3281 207.8906,431.6094 C207.8906,431.8906 207.75,432.1875 207.4844,432.3281 C207.3594,432.4219 207.1406,432.4531 206.7813,432.4531 L204.5156,432.4531 C203.7656,432.4531 203.3906,432.1719 203.3906,431.6094 C203.3906,431.3125 203.5469,431.0313 203.7969,430.875 C203.9531,430.7656 204.1094,430.75 204.5313,430.75 L207.1719,424.2344 L206.0938,424.2344 C205.6563,424.2344 205.4844,424.2031 205.3125,424.0938 C205.0938,423.9219 204.9531,423.6719 204.9531,423.3906 C204.9531,423.1094 205.1094,422.8281 205.3594,422.6563 C205.5156,422.5625 205.6406,422.5469 206.0938,422.5469 L209.7656,422.5469 L213.1563,430.75 C213.625,430.75 213.7813,430.7813 213.9531,430.9219 C214.1719,431.0781 214.3125,431.3281 214.3125,431.6094 C214.3125,431.8906 214.1563,432.1875 213.9063,432.3281 C213.7656,432.4219 213.5469,432.4531 213.1875,432.4531 L210.8281,432.4531 C210.4063,432.4531 210.2031,432.4063 210.0625,432.2813 C209.8438,432.125 209.7031,431.875 209.7031,431.6094 C209.7031,431.3125 209.8594,431.0313 210.1094,430.875 C210.2656,430.7656 210.375,430.75 210.8281,430.75 L211.2188,430.75 Z M210.125,428.0625 L208.7969,424.7969 L207.4531,428.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="153" x="229.75" y="432.1074">AbstractExecutorService</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="100" x2="480" y1="443.9531" y2="443.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="100" x2="480" y1="451.9531" y2="451.9531"/><polygon fill="#FFFF44" points="110,458.8555,114,462.8555,110,466.8555,106,462.8555" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="119" y="466.1636">newTaskFor(Runnable runnable, T value) : RunnableFuture&lt;T&gt;</text><polygon fill="#FFFF44" points="110,471.6602,114,475.6602,110,479.6602,106,475.6602" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="119" y="478.9683">newTaskFor(Callable&lt;T&gt; callable) : RunnbaleFuture&lt;T&gt;</text><!--class ThreadPoolExecutor--><rect fill="#FEFECE" filter="url(#fmzthbzhbajjm)" height="380.9219" id="ThreadPoolExecutor" style="stroke: #A80036; stroke-width: 1.5;" width="391" x="94.5" y="545.9531"/><ellipse cx="222.75" cy="561.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M225.0938,557.625 L225.2656,557.7031 C225.4844,557.3906 225.6875,557.2969 225.9844,557.2969 C226.2813,557.2969 226.5625,557.4375 226.7188,557.7031 C226.8125,557.8594 226.8281,557.9844 226.8281,558.4219 L226.8281,559.8438 C226.8281,560.2656 226.7969,560.4531 226.6875,560.6094 C226.5156,560.8281 226.25,560.9688 225.9844,560.9688 C225.7656,560.9688 225.5313,560.8594 225.3906,560.7188 C225.25,560.5938 225.2188,560.4688 225.1563,560.0625 C225.0625,559.6563 224.8906,559.4375 224.4063,559.1563 C223.9375,558.9063 223.3281,558.75 222.75,558.75 C221.0156,558.75 219.7656,560.0625 219.7656,561.8438 L219.7656,562.9375 C219.7656,564.6406 221.0625,565.7344 223.1094,565.7344 C223.875,565.7344 224.5625,565.6094 224.9844,565.3438 C225.1719,565.25 225.1719,565.25 225.625,564.7656 C225.8125,564.5781 226.0156,564.5 226.2344,564.5 C226.7031,564.5 227.0938,564.8906 227.0938,565.3438 C227.0938,565.7344 226.7656,566.1875 226.1875,566.5938 C225.4375,567.1406 224.2813,567.4375 223.0625,567.4375 C220.1719,567.4375 218.0625,565.5469 218.0625,562.9688 L218.0625,561.8438 C218.0625,559.125 220.0625,557.0469 222.6875,557.0469 C223.5625,557.0469 224.1563,557.1875 225.0938,557.625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="126" x="243.25" y="566.1074">ThreadPoolExecutor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="95.5" x2="484.5" y1="577.9531" y2="577.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="95.5" x2="484.5" y1="585.9531" y2="585.9531"/><ellipse cx="105.5" cy="597.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="114.5" y="600.1636">isTerminating() : boolean</text><ellipse cx="105.5" cy="610.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="114.5" y="612.9683">setThreadFactory(ThreadFactory threadFactory) : void</text><ellipse cx="105.5" cy="623.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="114.5" y="625.7729">getThreadFactory() : ThreadFactory</text><ellipse cx="105.5" cy="636.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="114.5" y="638.5776">setRejectedExecutionHandler(RejectedExecutionHandler handler)</text><ellipse cx="105.5" cy="649.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="114.5" y="651.3823">getRejectedExecutionHandler() : RejectedExecutionHandler</text><ellipse cx="105.5" cy="661.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="114.5" y="664.187">setCorePoolSize(int corePoolSize) : void</text><ellipse cx="105.5" cy="674.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="114.5" y="676.9917">getCorePoolSize() : int</text><ellipse cx="105.5" cy="687.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="114.5" y="689.7964">prestartCoreThread() : boolean</text><ellipse cx="105.5" cy="700.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="114.5" y="702.6011">prestartAllCoreThreads() : int</text><ellipse cx="105.5" cy="713.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="114.5" y="715.4058">allowsCoreThreadTimeOut() : boolean</text><ellipse cx="105.5" cy="725.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="114.5" y="728.2104">allowCoreThreadTimeOut(boolean value) : boolean</text><ellipse cx="105.5" cy="738.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="114.5" y="741.0151">setMaximumPoolSize(int maximumPoolSize) : void</text><ellipse cx="105.5" cy="751.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="114.5" y="753.8198">getMaximumPoolSize() : int</text><ellipse cx="105.5" cy="764.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="114.5" y="766.6245">setKeepAliveTime(long time, TimeUnit unit) : void</text><ellipse cx="105.5" cy="777.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="114.5" y="779.4292">getKeepAliveTime(TimeUnit unit)</text><ellipse cx="105.5" cy="789.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="114.5" y="792.2339">getQueue() : BlockingQueue&lt;Runnable&gt;</text><ellipse cx="105.5" cy="802.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="114.5" y="805.0386">remove(Runnable task) : boolean</text><ellipse cx="105.5" cy="815.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="114.5" y="817.8433">purge() : void</text><ellipse cx="105.5" cy="828.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="114.5" y="830.6479">getPoolSize() : int</text><ellipse cx="105.5" cy="841.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="114.5" y="843.4526">getActiveCount() : int</text><ellipse cx="105.5" cy="853.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="114.5" y="856.2573">getLargestPoolSize() : int</text><ellipse cx="105.5" cy="866.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="114.5" y="869.062">getTaskCount() : long</text><ellipse cx="105.5" cy="879.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="114.5" y="881.8667">getCompletedTaskCount() : long</text><polygon fill="#FFFF44" points="105.5,887.3633,109.5,891.3633,105.5,895.3633,101.5,891.3633" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="114.5" y="894.6714">beforeExecute(Thread t, Runnable r) : void</text><polygon fill="#FFFF44" points="105.5,900.168,109.5,904.168,105.5,908.168,101.5,904.168" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="114.5" y="907.4761">afterExecute(Runnable r, Throwable t) : void</text><polygon fill="#FFFF44" points="105.5,912.9727,109.5,916.9727,105.5,920.9727,101.5,916.9727" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="114.5" y="920.2808">terminated() : void</text><!--link Executor to ExecutorService--><path d="M290,110.4591 C290,122.7041 290,136.2441 290,149.9311 " fill="none" id="Executor-ExecutorService" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="283,110.0621,290,90.0621,297,110.0621,283,110.0621" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ExecutorService to AbstractExecutorService--><path d="M290,372.2871 C290,386.4471 290,399.9501 290,411.5261 " fill="none" id="ExecutorService-AbstractExecutorService" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="283,371.9631,290,351.9631,297,371.9631,283,371.9631" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AbstractExecutorService to ThreadPoolExecutor--><path d="M290,506.3041 C290,518.3941 290,531.8091 290,545.9091 " fill="none" id="AbstractExecutorService-ThreadPoolExecutor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="283,506.1121,290,486.1121,297,506.1121,283,506.1121" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml
Title "ThreadPoolExecutor类图"
interface Executor
interface ExecutorService
abstract class AbstractExecutorService
class ThreadPoolExecutor
Executor<|- - ExecutorService
ExecutorService<|.. AbstractExecutorService
AbstractExecutorService<|- - ThreadPoolExecutor
interface Executor{
+ execute(Runable command) : void
}
interface ExecutorService{
+ shutdown() : void
+ shutdownNow() : List<Runnable>
+ isShutdown() : boolean
+ isTerminated() : boolean
+ awaitTermination(long timeout, TimeUnit unit) : boolean
+ submit(Callable<T> task) : Future<T>
+ submit(Runnable task, T result) : Future<T>
+ submit(Runnable task) : Future<?>
+ invokeAll(Collection<? extends Callable<T> tasks>) : List<Future<T>>
+ invokeAll(Collection<? extends Callable> tasks, long timeout, TimeUnit unit) : List<Future<T>>
+ invokeAny(Collection<? extends Callable<T>> tasks) : T
+ invokeAny(Collection<? extends Callable<T>> tasks, long timeout, TimeUnit unit) : T
}

abstract class AbstractExecutorService{
# newTaskFor(Runnable runnable, T value) : RunnableFuture<T>
# newTaskFor(Callable<T> callable) : RunnbaleFuture<T>
}

class ThreadPoolExecutor{
+ isTerminating() : boolean
+ setThreadFactory(ThreadFactory threadFactory) : void
+ getThreadFactory() : ThreadFactory
+ setRejectedExecutionHandler(RejectedExecutionHandler handler)
+ getRejectedExecutionHandler() : RejectedExecutionHandler
+ setCorePoolSize(int corePoolSize) : void
+ getCorePoolSize() : int
+ prestartCoreThread() : boolean
+ prestartAllCoreThreads() : int
+ allowsCoreThreadTimeOut() : boolean
+ allowCoreThreadTimeOut(boolean value) : boolean
+ setMaximumPoolSize(int maximumPoolSize) : void
+ getMaximumPoolSize() : int
+ setKeepAliveTime(long time, TimeUnit unit) : void
+ getKeepAliveTime(TimeUnit unit)
+ getQueue() : BlockingQueue<Runnable>
+ remove(Runnable task) : boolean
+ purge() : void
+ getPoolSize() : int
+ getActiveCount() : int
+ getLargestPoolSize() : int
+ getTaskCount() : long
+ getCompletedTaskCount() : long
# beforeExecute(Thread t, Runnable r) : void
# afterExecute(Runnable r, Throwable t) : void
# terminated() : void
}
@enduml

PlantUML version 1.2018.13beta20(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.7.0_25-b15
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>